import { CATEGORIES, CategoryType } from "../utils/categories";

// Maps specific product names (in Romanian) to their respective categories.
const productCategories: Partial<Record<CategoryType, string[]>> = {
  [CATEGORIES.FRUITS_VEGETABLES.ro]: [
    "afine",
    "ananas",
    "anghinare",
    "ardei",
    "avocado",
    "banane",
    "broccoli",
    "capsuni",
    "cartofi",
    "castraveti",
    "ceapa",
    "ceapa verde",
    "cirese",
    "conopida",
    "curmale",
    "dovlecei",
    "dovlecele",
    "kiwi",
    "lamai",
    "mango",
    "mazare",
    "mere",
    "morcovi",
    "papaya",
    "pepene",
    "pere",
    "piersici",
    "portocale",
    "prune",
    "ridichi",
    "rodie",
    "rosii",
    "salata",
    "sfecla",
    "sparanghel",
    "struguri",
    "telina",
    "usturoi",
    "varza",
    "vinete",
    "zmeura",
    "ciuperci",
  ],
  [CATEGORIES.FRUITS_VEGETABLES.en]: [
    "blueberries",
    "pineapple",
    "artichoke",
    "peppers",
    "avocado",
    "bananas",
    "broccoli",
    "strawberries",
    "potatoes",
    "cucumbers",
    "onion",
    "green onion",
    "cherries",
    "cauliflower",
    "dates",
    "zucchini",
    "kiwi",
    "lemons",
    "mango",
    "peas",
    "apples",
    "carrots",
    "papaya",
    "melon",
    "watermelon",
    "pears",
    "peaches",
    "oranges",
    "plums",
    "radishes",
    "pomegranate",
    "tomatoes",
    "lettuce",
    "beetroot",
    "asparagus",
    "grapes",
    "celery",
    "garlic",
    "cabbage",
    "eggplant",
    "raspberries",
    "mushrooms",
  ],
  [CATEGORIES.DAIRY.ro]: [
    "branza de burduf",
    "branza de vaci",
    "branza topita",
    "branza",
    "cascaval",
    "cheddar",
    "cottage",
    "edam",
    "feta",
    "gorgonzola",
    "gouda",
    "iaurt",
    "kefir",
    "lapte",
    "lapte batut",
    "mascarpone",
    "mozzarella",
    "parmezan",
    "ricotta",
    "smantana",
    "smantana pentru gatit",
    "telemea",
    "unt",
  ],
  [CATEGORIES.DAIRY.en]: [
    "cheese",
    "cottage cheese",
    "processed cheese",
    "cheddar",
    "edam",
    "feta",
    "gorgonzola",
    "gouda",
    "yogurt",
    "kefir",
    "milk",
    "buttermilk",
    "mascarpone",
    "mozzarella",
    "parmesan",
    "ricotta",
    "sour cream",
    "cooking cream",
    "butter",
  ],
  [CATEGORIES.MEAT.ro]: [
    "calamar",
    "calcan",
    "caracatita",
    "carnati",
    "coaste de porc",
    "costita",
    "cotlet porc",
    "crab",
    "creier",
    "creveti",
    "curcan",
    "ficat",
    "file de peste",
    "hering",
    "homar",
    "languste",
    "macrou",
    "mici",
    "midii",
    "miel",
    "mititei",
    "muschiulet",
    "pastrama",
    "peste",
    "piept de curcan",
    "piept de pui",
    "porc",
    "pui",
    "pulpa de pui",
    "pulpa porc",
    "pulpe de pui",
    "rinichi",
    "salam",
    "sardine",
    "slanina",
    "somon",
    "sunca",
    "ton",
    "vita",
  ],
  [CATEGORIES.MEAT.en]: [
    "squid",
    "turbot",
    "octopus",
    "sausages",
    "pork ribs",
    "bacon",
    "pork chop",
    "crab",
    "brain",
    "shrimp",
    "turkey",
    "liver",
    "fish fillet",
    "hering",
    "lobster",
    "spiny lobster",
    "mackerel",
    "mici",
    "mussels",
    "lamb",
    "tenderloin",
    "pastrami",
    "fish",
    "turkey breast",
    "chicken breast",
    "pork",
    "chicken",
    "pork leg",
    "chicken legs",
    "kidney",
    "salami",
    "sardines",
    "salmon",
    "ham",
    "tuna",
    "beef",
  ],
  [CATEGORIES.BAKERY.ro]: [
    "bagheta",
    "biscuiti",
    "branzoaice",
    "chifle",
    "cornuri",
    "covrigi",
    "cozonac",
    "croissant",
    "foccacia",
    "franzela",
    "toast",
    "gogoși",
    "lipie",
    "orez expandat",
    "paine",
    "patiserie",
    "pita",
    "placinta",
    "poale-n brau",
    "prajitura",
  ],
  [CATEGORIES.BAKERY.en]: [
    "bread",
    "baguette",
    "biscuits",
    "buns",
    "croissant",
    "pretzels",
    "cake",
    "focaccia",
    "toast",
    "donuts",
    "flatbread",
    "pastry",
    "pie",
  ],
  [CATEGORIES.BEVERAGES.ro]: [
    "apa",
    "bere",
    "cafea",
    "ceai",
    "gin",
    "rom",
    "sampanie",
    "suc",
    "vin",
    "votca",
    "votka",
    "whisky",
  ],
  [CATEGORIES.BEVERAGES.en]: [
    "water",
    "beer",
    "coffee",
    "tea",
    "gin",
    "rum",
    "champagne",
    "juice",
    "wine",
    "vodka",
    "whisky",
  ],
  [CATEGORIES.SWEETS.ro]: [
    "bomboane",
    "ciocolata",
    "fursecuri",
    "jeleuri",
    "napolitane",
    "prajituri",
  ],
  [CATEGORIES.SWEETS.en]: [
    "candies",
    "chocolate",
    "cookies",
    "jellies",
    "wafers",
    "cakes",
    "sweets",
  ],
  [CATEGORIES.CANNED_GOODS.ro]: [
    "conserva de carne",
    "conserva de ciuperci",
    "conserva de fasole",
    "conserva de linte",
    "conserva de naut",
    "conserva de peste",
    "conserva de rosii",
    "conserve de mazare",
    "conserve de porumb",
    "conserve de ton",
    "zacusca",
  ],
  [CATEGORIES.CANNED_GOODS.en]: [
    "canned meat",
    "canned mushrooms",
    "canned beans",
    "canned lentils",
    "canned chickpeas",
    "canned fish",
    "canned tomatoes",
    "canned peas",
    "canned corn",
    "canned tuna",
  ],
  [CATEGORIES.STAPLES.ro]: [
    "drojdie",
    "fasole",
    "faina",
    "gris",
    "linte",
    "malai",
    "naut",
    "orez",
    "otet",
    "paste",
    "piper",
    "sare",
    "ulei",
    "zahar",
  ],
  [CATEGORIES.STAPLES.en]: [
    "yeast",
    "beans",
    "flour",
    "semolina",
    "lentils",
    "cornmeal",
    "chickpeas",
    "rice",
    "vinegar",
    "pasta",
    "pepper",
    "salt",
    "oil",
    "sugar",
  ],
  [CATEGORIES.FROZEN.ro]: [
    "cartofi congelati",
    "fructe de padure congelate",
    "inghetata",
    "legume congelate",
    "pește congelat",
    "pizza congelata",
    "pui congelat",
  ],
  [CATEGORIES.FROZEN.en]: [
    "frozen potatoes",
    "frozen berries",
    "ice cream",
    "frozen vegetables",
    "frozen fish",
    "frozen pizza",
    "frozen chicken",
  ],
  [CATEGORIES.CLEANING.ro]: [
    "bureti",
    "clor",
    "detergent",
    "detergent de vase",
    "fairy",
    "saci de gunoi",
    "solutie de geamuri",
  ],
  [CATEGORIES.CLEANING.en]: [
    "sponges",
    "bleach",
    "detergent",
    "dish soap",
    "garbage bags",
    "window cleaner",
  ],
  [CATEGORIES.PERSONAL_HYGIENE.ro]: [
    "ata dentara",
    "deodorant",
    "dischete demachiante",
    "gel de dus",
    "hartie igienica",
    "pasta de dinti",
    "periuta de dinti",
    "sapun",
    "sapun lichid",
    "sampon",
  ],
  [CATEGORIES.PERSONAL_HYGIENE.en]: [
    "dental floss",
    "deodorant",
    "makeup remover pads",
    "shower gel",
    "toilet paper",
    "toothpaste",
    "toothbrush",
    "soap",
    "liquid soap",
    "shampoo",
  ],
  [CATEGORIES.NON_FOOD.ro]: [
    "baterii",
    "becuri",
    "chibrituri",
    "folie alimentara",
    "hartie de copt",
    "lumanari",
    "servetele umede",
    "sfoara",
  ],
  [CATEGORIES.NON_FOOD.en]: [
    "batteries",
    "light bulbs",
    "matches",
    "cling film",
    "baking paper",
    "candles",
    "wet wipes",
    "twine",
  ],
};

// Creates a flattened map from product name to category for quick lookup.
const productCategoryMap: Record<string, CategoryType> = Object.entries(
  productCategories
).reduce((acc, [category, products]) => {
  if (products) {
    products.forEach((product) => {
      // Assigns the category to each product.
      acc[product] = category as CategoryType;
    });
  }
  return acc;
}, {} as Record<string, CategoryType>);

// Function to guess the category of a product based on its name.
export const guessCategory = (productName: string): CategoryType => {
  const lowerCaseName = productName.trim().toLowerCase();
  let bestMatch: { category: CategoryType; length: number } | null = null;

  for (const keyword of Object.keys(productCategoryMap)) {
    if (
      lowerCaseName.includes(keyword) &&
      (!bestMatch || keyword.length > bestMatch.length)
    ) {
      bestMatch = {
        category: productCategoryMap[keyword],
        length: keyword.length,
      };
    }
  }

  return bestMatch ? bestMatch.category : CATEGORIES.OTHERS.ro;
};
