const CATEGORIES = {
  FRUCTE_LEGUME: { key: "fructe/legume", name: "Fructe/Legume", emoji: "üçéü•¶" },
  LACTATE: { key: "lactate", name: "Lactate", emoji: "ü•õ" },
  CARNE: { key: "carne", name: "Carne", emoji: "ü•©" },
  PANIFICATIE: { key: "panificatie", name: "Panifica»õie", emoji: "üçû" },
  BAUTURI: { key: "bauturi", name: "BƒÉuturi", emoji: "ü•§" },
  DULCIURI: { key: "dulciuri", name: "Dulciuri", emoji: "üç¨" },
  PRODUSE_DE_BAZA: {
    key: "produse de baza",
    name: "Produse de bazƒÉ",
    emoji: "üßÇ",
  },
  CONSERVE: { key: "conserve", name: "Conserve", emoji: "ü•´" },
  CONGELATE: { key: "congelate", name: "Congelate", emoji: "üßä" },
  CURATENIE: { key: "curatenie", name: "CurƒÉ»õenie", emoji: "üßΩ" },
  IGIENA_PERSONALA: {
    key: "igiena personala",
    name: "IgienƒÉ PersonalƒÉ",
    emoji: "üõÅ",
  },
  NEALIMENTARE: { key: "nealimentare", name: "Nealimentare", emoji: "üîã" },
  ALTELE: { key: "altele", name: "Altele", emoji: "üõí" },
} as const;

export const categories = Object.values(CATEGORIES).map((c) => c.key);
export type CategoryType = (typeof categories)[number];

// Provides display names and emojis for each category.
export const categoryDisplay: Record<
  CategoryType,
  { name: string; emoji: string }
> = {
  ...Object.values(CATEGORIES).reduce((acc, { key, name, emoji }) => {
    acc[key] = { name, emoji };
    return acc;
  }, {} as Record<CategoryType, { name: string; emoji: string }>),
};

// Maps specific product names (in Romanian) to their respective categories.
const productCategories: Partial<Record<CategoryType, string[]>> = {
  [CATEGORIES.FRUCTE_LEGUME.key]: [
    "afine",
    "ananas",
    "anghinare",
    "ardei",
    "avocado",
    "banane",
    "broccoli",
    "capsuni",
    "cartofi",
    "castraveti",
    "ceapa",
    "ceapa verde",
    "cirese",
    "conopida",
    "curmale",
    "dovlecei",
    "dovlecele",
    "kiwi",
    "lamai",
    "mango",
    "mazare",
    "mere",
    "morcovi",
    "papaya",
    "pepene",
    "pere",
    "piersici",
    "portocale",
    "prune",
    "ridichi",
    "rodie",
    "rosii",
    "salata",
    "sfecla",
    "sparanghel",
    "struguri",
    "telina",
    "usturoi",
    "varza",
    "vinete",
    "zmeura",
  ],
  [CATEGORIES.LACTATE.key]: [
    "branza de burduf",
    "branza de vaci",
    "branza topita",
    "branza",
    "cascaval",
    "cheddar",
    "cottage",
    "edam",
    "feta",
    "gorgonzola",
    "gouda",
    "iaurt",
    "kefir",
    "lapte",
    "lapte batut",
    "mascarpone",
    "mozzarella",
    "parmezan",
    "ricotta",
    "smantana",
    "smantana pentru gatit",
    "telemea",
    "unt",
  ],
  [CATEGORIES.CARNE.key]: [
    "calamar",
    "calcan",
    "caracatita",
    "carnati",
    "coaste de porc",
    "costita",
    "cotlet porc",
    "crab",
    "creier",
    "creveti",
    "curcan",
    "ficat",
    "file de peste",
    "hering",
    "homar",
    "languste",
    "macrou",
    "mici",
    "midii",
    "miel",
    "mititei",
    "muschiulet",
    "pastrama",
    "peste",
    "piept de curcan",
    "piept de pui",
    "porc",
    "pui",
    "pulpa de pui",
    "pulpa porc",
    "pulpe de pui",
    "rinichi",
    "salam",
    "sardine",
    "slanina",
    "somon",
    "sunca",
    "ton",
    "vita",
  ],
  [CATEGORIES.PANIFICATIE.key]: [
    "bagheta",
    "biscuiti",
    "branzoaice",
    "chifle",
    "cornuri",
    "covrigi",
    "cozonac",
    "croissant",
    "foccacia",
    "franzela",
    "gogo»ôi",
    "lipie",
    "orez expandat",
    "paine",
    "patiserie",
    "pita",
    "placinta",
    "poale-n brau",
    "prajitura",
  ],
  [CATEGORIES.BAUTURI.key]: [
    "apa",
    "bere",
    "cafea",
    "ceai",
    "gin",
    "rom",
    "sampanie",
    "suc",
    "vin",
    "votca",
    "votka",
    "whisky",
  ],
  [CATEGORIES.DULCIURI.key]: [
    "bomboane",
    "ciocolata",
    "fursecuri",
    "jeleuri",
    "napolitane",
    "prajituri",
  ],
  [CATEGORIES.CONSERVE.key]: [
    "conserva de carne",
    "conserva de ciuperci",
    "conserva de fasole",
    "conserva de linte",
    "conserva de naut",
    "conserva de peste",
    "conserva de rosii",
    "conserve de mazare",
    "conserve de porumb",
    "conserve de ton",
    "zacusca",
  ],
  [CATEGORIES.PRODUSE_DE_BAZA.key]: [
    "drojdie",
    "fasole",
    "faina",
    "gris",
    "linte",
    "malai",
    "naut",
    "orez",
    "otet",
    "paste",
    "piper",
    "sare",
    "ulei",
    "zahar",
  ],
  [CATEGORIES.CONGELATE.key]: [
    "cartofi congelati",
    "fructe de padure congelate",
    "inghetata",
    "legume congelate",
    "pe»ôte congelat",
    "pizza congelata",
    "pui congelat",
  ],
  [CATEGORIES.CURATENIE.key]: [
    "bureti",
    "clor",
    "detergent",
    "detergent de vase",
    "fairy",
    "saci de gunoi",
    "solutie de geamuri",
  ],
  [CATEGORIES.IGIENA_PERSONALA.key]: [
    "ata dentara",
    "deodorant",
    "dischete demachiante",
    "gel de dus",
    "hartie igienica",
    "pasta de dinti",
    "periuta de dinti",
    "sapun",
    "sapun lichid",
    "sampon",
  ],
  [CATEGORIES.NEALIMENTARE.key]: [
    "baterii",
    "becuri",
    "chibrituri",
    "folie alimentara",
    "hartie de copt",
    "lumanari",
    "servetele umede",
    "sfoara",
  ],
};

// Creates a flattened map from product name to category for quick lookup.
const productCategoryMap: Record<string, CategoryType> = Object.entries(
  productCategories
).reduce((acc, [category, products]) => {
  if (products) {
    products.forEach((product) => {
      // Assigns the category to each product.
      acc[product] = category as CategoryType;
    });
  }
  return acc;
}, {} as Record<string, CategoryType>);

// Function to guess the category of a product based on its name.
export const guessCategory = (productName: string): CategoryType => {
  const lowerCaseName = productName.trim().toLowerCase();
  // Returns the guessed category or "altele" (other) if no match is found.
  return productCategoryMap[lowerCaseName] || CATEGORIES.ALTELE.key;
};
