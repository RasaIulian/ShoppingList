{"version":3,"sources":["components/ShoppingList.style.tsx","components/ShoppingList.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","Input","input","_templateObject3","ErrorMessage","p","_templateObject4","ListsContainer","_templateObject5","List","ul","_templateObject6","ListItem","li","_templateObject7","Label","label","_templateObject8","CheckboxInput","_templateObject9","CheckedItemsContainer","_templateObject10","CheckedItemsTitle","h3","_templateObject11","CheckedItemsList","_templateObject12","CheckedItem","_templateObject13","CheckedItemName","span","_templateObject14","Message","_templateObject15","RemoveAllButton","button","_templateObject16","SortButton","_templateObject17","ShoppingList","items","setItems","useState","storedItems","localStorage","getItem","JSON","parse","inputValue","setInputValue","checkedItems","setCheckedItems","storedCheckedItems","error","setError","useEffect","setItem","stringify","sortItemsAlphabetically","sort","a","b","name","localeCompare","React","createElement","type","value","placeholder","onChange","e","target","onKeyDown","key","handleAddItem","trim","newItem","id","Date","now","some","item","prevItems","onClick","sortShoppingListAlphabetically","map","checkedItem","newItems","filter","prevCheckedItems","handleCheckItem","itemId","updatedItems","handleRemoveItem","handleRemoveAllListItems","sortCheckedItemsAlphabetically","returnedItem","newCheckedItems","handleReturnToShoppingList","stopPropagation","updatedCheckedItems","handleRemoveCheckedItem","handleRemoveAllCheckedItems","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e325de90.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// Color Palette\r\nconst primaryColor = \"#215ADE\"; // Razzle Dazzle Blue\r\nconst secondaryColor = \"#e10000\"; // Razzle Dazzle Rose\r\nconst neutralColor = \"#efefef\"; // Gray\r\n\r\nexport const Container = styled.div`\r\n  font-family: Arial, sans-serif;\r\n  padding: 1.5rem;\r\n  background: linear-gradient(135deg, ${neutralColor}, ${primaryColor});\r\n  max-width: 60rem; /* Adjust the width as needed */\r\n  margin: 1rem auto; /* Center the container horizontally */\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color: ${primaryColor};\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem;\r\n  border: none;\r\n  border-radius: 0.5rem;\r\n  font-size: 1.6rem;\r\n  width: 100%;\r\n  max-width: 30rem;\r\n  background-color: ${neutralColor};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 0.5rem;\r\n  transition: background-color, box-shadow 0.3s ease;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fafafa;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: #ff0000;\r\n  font-size: 1.6rem;\r\n  margin-top: 1rem;\r\n`;\r\nexport const ListsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  border: 4px solid transparent;\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  border-image: linear-gradient(to right, ${neutralColor}, ${secondaryColor}) 4;\r\n  width: 45%;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-bottom: 0.5rem;\r\n  display: flex;\r\n  justify-content: space-between; /* Aligns the items to the left and right */\r\n  align-items: center; /* Aligns the items vertically */\r\n  width: 100%;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  border-radius: 0.5rem;\r\n  padding: 0.3rem;\r\n  position: relative;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: background-color, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${neutralColor};\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Increase shadow size for 3D effect */\r\n  }\r\n  & button {\r\n    /* Styles for the X button */\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    right: 0.3rem;\r\n    transition: color 0.3s ease;\r\n  }\r\n  & button:hover {\r\n    color: ${secondaryColor};\r\n  }\r\n`;\r\n\r\nexport const CheckboxInput = styled.input`\r\n  margin-right: 0.5rem;\r\n  cursor: pointer;\r\n  appearance: none;\r\n  width: 1.6rem;\r\n  height: 1.6rem;\r\n  border: 1px solid;\r\n  border-radius: 0.3rem;\r\n  outline: none;\r\n  transition: border 0.3s ease;\r\n  &:hover {\r\n    border: none;\r\n  }\r\n\r\n  &:hover::after {\r\n    opacity: 1;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n  &::after {\r\n    content: \"âœ”\"; /* Unicode for check symbol */\r\n    opacity: 0; /* Initially hide the check symbol */\r\n    position: absolute; /* Position the check symbol */\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nexport const CheckedItemsContainer = styled.div`\r\n  width: 45%;\r\n`;\r\n\r\nexport const CheckedItemsTitle = styled.h3`\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const CheckedItemsList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  border: 4px solid transparent;\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  border-image: linear-gradient(to right, ${primaryColor}, ${neutralColor}) 4;\r\n`;\r\n\r\nexport const CheckedItem = styled.li`\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  color: ${neutralColor};\r\n  border-radius: 0.5rem;\r\n  padding: 0.3rem;\r\n  margin-bottom: 0.5rem;\r\n  transition: background-color, box-shadow 0.3s ease;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between; /* Aligns the items to the left and right */\r\n  align-items: center; /* Aligns the items vertically */\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n\r\n  &:hover {\r\n    background-color: ${primaryColor};\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Increase shadow size for 3D effect */\r\n  }\r\n  & button {\r\n    /* Styles for the X button */\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: ${neutralColor};\r\n    transition: color 0.3s ease;\r\n  }\r\n  & button:hover {\r\n    color: ${secondaryColor};\r\n  }\r\n`;\r\n\r\nexport const CheckedItemName = styled.span`\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-size: 1.4rem;\r\n  width: 101%;\r\n`;\r\n\r\nexport const RemoveAllButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.6rem;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.5rem;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  &:hover {\r\n    color: ${secondaryColor};\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    background-color: ${neutralColor};\r\n  }\r\n`;\r\n\r\nexport const SortButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.6rem;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.5rem;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 0.5rem;\r\n  color: ${primaryColor};\r\n\r\n  &:hover {\r\n    background-color: ${primaryColor};\r\n    color: ${neutralColor};\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Title,\r\n  Input,\r\n  ErrorMessage,\r\n  ListsContainer,\r\n  List,\r\n  ListItem,\r\n  Label,\r\n  CheckboxInput,\r\n  CheckedItemsContainer,\r\n  CheckedItemsTitle,\r\n  CheckedItemsList,\r\n  CheckedItem,\r\n  CheckedItemName,\r\n  Message,\r\n  RemoveAllButton,\r\n  SortButton,\r\n} from \"./ShoppingList.style\";\r\n\r\ninterface ShoppingItem {\r\n  // Defining the structure of a shopping item\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst ShoppingList: React.FC = () => {\r\n  // Functional component definition\r\n  const [items, setItems] = useState<ShoppingItem[]>(() => {\r\n    const storedItems = localStorage.getItem(\"shoppingListItems\");\r\n    return storedItems ? JSON.parse(storedItems) : [];\r\n  });\r\n  const [inputValue, setInputValue] = useState(\"\"); // State for input field value\r\n  const [checkedItems, setCheckedItems] = useState<ShoppingItem[]>(() => {\r\n    const storedCheckedItems = localStorage.getItem(\"CheckedItems\");\r\n    return storedCheckedItems ? JSON.parse(storedCheckedItems) : [];\r\n  }); // State for checked items\r\n  const [error, setError] = useState<string>(\"\"); // State for error messages\r\n\r\n  // Effect to update local storage when shopping list items change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"shoppingListItems\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  // Effect to update local storage when checked items change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"CheckedItems\", JSON.stringify(checkedItems));\r\n  }, [checkedItems]);\r\n\r\n  // Function to handle adding a new item to the shopping list\r\n  const handleAddItem = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      const newItem: ShoppingItem = {\r\n        id: Date.now(), // Generate a unique ID (you can use a better approach)\r\n        name: inputValue,\r\n      };\r\n\r\n      // Check if the item already exists in the shopping list\r\n      if (items.some((item) => item.name === newItem.name)) {\r\n        setError(\"Item already in list.\");\r\n        return;\r\n      } else if (checkedItems.some((item) => item.name === newItem.name)) {\r\n        setError(\"Item already in checked items.\");\r\n        return;\r\n      }\r\n\r\n      setItems((prevItems) => [...prevItems, newItem]);\r\n      setInputValue(\"\"); // Clear input field\r\n      setError(\"\"); // Clear error message\r\n    }\r\n  };\r\n\r\n  const handleRemoveItem = (itemId: number) => {\r\n    const updatedItems = items.filter((item) => item.id !== itemId);\r\n    setItems(updatedItems);\r\n  };\r\n  // Function to handle removing a checked item\r\n  const handleRemoveCheckedItem = (itemId: number) => {\r\n    const updatedCheckedItems = checkedItems.filter(\r\n      (item) => item.id !== itemId\r\n    );\r\n    setCheckedItems(updatedCheckedItems);\r\n  };\r\n\r\n  // Function to handle checking an item\r\n  const handleCheckItem = (checkedItem: ShoppingItem) => {\r\n    // Remove the checked item from the shopping list\r\n    const newItems = items.filter((item) => item.id !== checkedItem.id);\r\n    setItems(newItems);\r\n\r\n    // Add the checked item to the checked items list\r\n    setCheckedItems((prevCheckedItems) => [...prevCheckedItems, checkedItem]);\r\n  };\r\n\r\n  const handleRemoveAllListItems = () => {\r\n    setItems([]);\r\n  };\r\n  const handleRemoveAllCheckedItems = () => {\r\n    setCheckedItems([]);\r\n  };\r\n\r\n  // Function to handle returning an item to the shopping list\r\n  const handleReturnToShoppingList = (returnedItem: ShoppingItem) => {\r\n    // Remove the returned item from the checked items list\r\n    const newCheckedItems = checkedItems.filter(\r\n      (item) => item.id !== returnedItem.id\r\n    );\r\n    setCheckedItems(newCheckedItems);\r\n\r\n    // Add the returned item back to the shopping list\r\n    setItems((prevItems) => [...prevItems, returnedItem]);\r\n  };\r\n\r\n  const sortItemsAlphabetically = (items: ShoppingItem[]) => {\r\n    return items.sort((a, b) => a.name.localeCompare(b.name));\r\n  };\r\n\r\n  const sortShoppingListAlphabetically = () => {\r\n    setItems((prevItems) => {\r\n      const sortedItems = sortItemsAlphabetically([...prevItems]);\r\n      return sortedItems;\r\n    });\r\n  };\r\n\r\n  const sortCheckedItemsAlphabetically = () => {\r\n    setCheckedItems((prevCheckedItems) => {\r\n      const sortedCheckedItems = sortItemsAlphabetically([...prevCheckedItems]);\r\n      return sortedCheckedItems;\r\n    });\r\n  };\r\n\r\n  // JSX structure for the component\r\n  return (\r\n    <Container>\r\n      <Title>Shopping List</Title>\r\n      <Input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        placeholder=\"add new item\"\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            handleAddItem();\r\n          }\r\n        }}\r\n      />\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}{\" \"}\r\n      <ListsContainer>\r\n        <List>\r\n          <SortButton onClick={sortShoppingListAlphabetically}>\r\n            Sort A{\" > \"}Z\r\n          </SortButton>\r\n\r\n          {items.map((item) => (\r\n            <ListItem key={item.id}>\r\n              <Label>\r\n                <CheckboxInput\r\n                  type=\"checkbox\"\r\n                  onChange={() => handleCheckItem(item)}\r\n                />\r\n                {item.name}\r\n                <button onClick={() => handleRemoveItem(item.id)}>X</button>\r\n              </Label>\r\n            </ListItem>\r\n          ))}\r\n          <RemoveAllButton onClick={handleRemoveAllListItems}>\r\n            Remove All\r\n          </RemoveAllButton>\r\n        </List>\r\n        <CheckedItemsContainer>\r\n          <CheckedItemsList>\r\n            <CheckedItemsTitle>Checked Items</CheckedItemsTitle>\r\n            <Message>~ Click to bring back to Shopping List ~</Message>\r\n            <SortButton onClick={sortCheckedItemsAlphabetically}>\r\n              Sort A{\" > \"}Z\r\n            </SortButton>\r\n            {checkedItems.map((item) => (\r\n              <CheckedItem\r\n                key={item.id}\r\n                onClick={() => handleReturnToShoppingList(item)}\r\n              >\r\n                <CheckedItemName>{item.name}</CheckedItemName>\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation(); // Prevent the click event from bubbling up\r\n                    handleRemoveCheckedItem(item.id);\r\n                  }}\r\n                >\r\n                  X\r\n                </button>\r\n              </CheckedItem>\r\n            ))}\r\n            <RemoveAllButton onClick={handleRemoveAllCheckedItems}>\r\n              Remove All\r\n            </RemoveAllButton>\r\n          </CheckedItemsList>\r\n        </CheckedItemsContainer>\r\n      </ListsContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n","import React from \"react\";\nimport ShoppingList from \"./components/ShoppingList\";\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <ShoppingList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}